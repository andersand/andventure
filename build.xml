<?xml version="1.0" encoding="UTF-8"?>
<!-- ant build file -->
<!-- 

TODO make jar.

-->
<project name="adventure" default="all">
  
  
  <property file="build.properties"/>

  <property name="skip.tests" value="true"/>
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/.svn/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/lib/**"/>
    <exclude name="**/*~/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.tga"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
    <include name="**/?*.vm"/>
    <include name="**/?*.fnt"/>
    <include name="**/?*.level"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  <!-- Modules -->
  
  
  <!-- Module Main -->
  
  <dirname property="module.main.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.main" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.main" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.main" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.main" value="${compiler.args}"/>
  
  <property name="main.output.dir" value="${module.main.basedir}/target/production/Main"/>
  <property name="main.testoutput.dir" value="${module.main.basedir}/target/test/Main"/>
  
  <path id="main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="main.module.production.classpath">
    <path refid="${module.jdk.classpath.main}"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="main.runtime.production.module.classpath">
    <pathelement location="${main.output.dir}"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="main.module.classpath">
    <path refid="${module.jdk.classpath.main}"/>
    <pathelement location="${main.output.dir}"/>
    <pathelement location="${idea.home}/plugins/testng/lib/testng-jdk15.jar"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="main.runtime.module.classpath">
    <pathelement location="${main.testoutput.dir}"/>
    <pathelement location="${main.output.dir}"/>
    <pathelement location="${idea.home}/plugins/testng/lib/testng-jdk15.jar"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <patternset id="excluded.from.module.main">
    <patternset refid="ignored.files"/>
    <exclude name="net/andersand/andventure/framework/**"/>
    <exclude name="old/**"/>
    <exclude name="java/net/andersand/andventure/framework/**"/>
    <exclude name="java/old/**"/>
    <exclude name="resources/img/demo/**"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.main">
    <patternset refid="excluded.from.module.main"/>
  </patternset>
  
  <path id="main.module.sourcepath">
    <dirset dir="${module.main.basedir}/src">
      <include name="main/java"/>
      <include name="main"/>
    </dirset>
  </path>
  
  <path id="main.module.test.sourcepath">
    <dirset dir="${module.main.basedir}/src">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.main" depends="compile.module.main.production,compile.module.main.tests" description="Compile module Main"/>
  
  <target name="compile.module.main.production" description="Compile module Main; production classes">
    <mkdir dir="${main.output.dir}"/>
    <javac destdir="${main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.main}/javac">
      <compilerarg line="${compiler.args.main}"/>
      <bootclasspath refid="main.module.bootclasspath"/>
      <classpath refid="main.module.production.classpath"/>
      <src refid="main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.main"/>
    </javac>
    
    <copy todir="${main.output.dir}">
      <fileset dir="${module.main.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.main.basedir}/src/main">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.main.tests" depends="compile.module.main.production" description="compile module Main; test classes" unless="skip.tests">
    <mkdir dir="${main.testoutput.dir}"/>
    <javac destdir="${main.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.main}/javac">
      <compilerarg line="${compiler.args.main}"/>
      <bootclasspath refid="main.module.bootclasspath"/>
      <classpath refid="main.module.classpath"/>
      <src refid="main.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.main"/>
    </javac>
    
    <copy todir="${main.testoutput.dir}">
      <fileset dir="${module.main.basedir}/src/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.main" description="cleanup module">
    <delete dir="${main.output.dir}"/>
    <delete dir="${main.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.main" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.main" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>
